<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Baldwin's Blog]]></title>
  <subtitle><![CDATA[Coding - Keep Calm and Carry On]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://sunblognuke.github.io/"/>
  <updated>2016-01-13T06:18:21.433Z</updated>
  <id>http://sunblognuke.github.io/</id>
  
  <author>
    <name><![CDATA[Baldwin]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[程序员的数学]]></title>
    <link href="http://sunblognuke.github.io/2016/01/13/Math-for-Programmers/"/>
    <id>http://sunblognuke.github.io/2016/01/13/Math-for-Programmers/</id>
    <published>2016-01-13T06:09:25.000Z</published>
    <updated>2016-01-13T06:18:21.433Z</updated>
    <content type="html"><![CDATA[<p>Steve Yegge大神写的一篇文章《Math for Programmers》：</p>
<p>原文地址: <a href="http://steve-yegge.blogspot.com/2006/03/math-for-programmers.html" target="_blank" rel="external">Math for Programmers</a> (自备梯子查看)<br>译文地址: <a href="http://article.yeeyan.org/view/pluto/2365" target="_blank" rel="external">程序员怎样学数学</a></p>
<p>本文也被收录在<a href="http://book.douban.com/subject/25884108/" target="_blank" rel="external">《程序员的呐喊》</a></p>
<p>附带相关的公开课<a href="http://v.163.com/movie/2010/11/J/1/M77TH78HU_M78B4KQJ1.html" target="_blank" rel="external">《用计算机教孩子真正的数学》</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Steve Yegge大神写的一篇文章《Math for Programmers》：</p>
<p>原文地址: <a href="http://steve-yegge.blogspot.com/2006/03/math-for-programmers.html" targe]]>
    </summary>
    
      <category term="Math" scheme="http://sunblognuke.github.io/tags/Math/"/>
    
      <category term="Programmers" scheme="http://sunblognuke.github.io/tags/Programmers/"/>
    
      <category term="Notes" scheme="http://sunblognuke.github.io/categories/Notes/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Windows下Python easy_install和pip的安装]]></title>
    <link href="http://sunblognuke.github.io/2016/01/13/Python-esay-install-pip-for-Windows/"/>
    <id>http://sunblognuke.github.io/2016/01/13/Python-esay-install-pip-for-Windows/</id>
    <published>2016-01-13T03:21:00.000Z</published>
    <updated>2016-01-13T05:51:05.302Z</updated>
    <content type="html"><![CDATA[<h2 id="为何要安装easy_install和pip">为何要安装easy_install和pip</h2><p>easy_install和pip都是用来下载安装Python一个<a href="https://pypi.python.org/pypi/" target="_blank" rel="external">公共资源库PyPI</a>的相关资源包的</p>
<p>正常情况下，我们要给Python安装第三方的扩展包，我们必须下载压缩包，解压缩到一个目录，然后命令行或者终端打开这个目录，然后执行</p>
<pre><code>setup<span class="class">.py</span> build
setup<span class="class">.py</span> install
</code></pre><p>来进行安装。这样是不是很繁琐呢？如果我们直接命令行执行</p>
<pre><code><span class="title">easy_install</span> libname
</code></pre><p>就把最新版的扩展包libname安装上去了，是不是很爽呢？<br>所以easy_install就是为了我们安装第三方扩展包更容易</p>
<p>同理，pip可认为是easy_install的替代品。</p>
<h2 id="如何安装easy_install和pip">如何安装easy_install和pip</h2><h3 id="方法1：">方法1：</h3><p>1.首先找到easy_install正确的版本进行下载，下载地址：</p>
<p><a href="http://pypi.python.org/pypi/setuptools" target="_blank" rel="external">http://pypi.python.org/pypi/setuptools</a></p>
<p>比如win7 32位可以下载setuptools-0.6c11.win32-py2.7.exe</p>
<p>或下载ez_setup.py进行安装，在该文件目录上打开cmd命令行或终端执行</p>
<pre><code><span class="keyword">python</span> ez_setup.<span class="keyword">py</span>
</code></pre><p>2.安装完成后python的安装目录中会生成scripts目录，其中包括easy_install.exe，然后把该目录添加到Windows系统的环境变量Path里。</p>
<h3 id="方法2：">方法2：</h3><p>可直接cmd命令行或终端执行来远程安装:</p>
<pre><code><span class="keyword">python</span> ez_setup.<span class="keyword">py</span>
</code></pre><h3 id="安装pip:">安装pip:</h3><p>pip下载地址：<a href="https://pypi.python.org/pypi/pip" target="_blank" rel="external">https://pypi.python.org/pypi/pip</a></p>
<p>参考链接:</p>
<p><a href="http://jingyan.baidu.com/article/b907e627e78fe146e7891c25.html" target="_blank" rel="external">http://jingyan.baidu.com/article/b907e627e78fe146e7891c25.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="为何要安装easy_install和pip">为何要安装easy_install和pip</h2><p>easy_install和pip都是用来下载安装Python一个<a href="https://pypi.python.org/pypi/" target="]]>
    </summary>
    
      <category term="Python" scheme="http://sunblognuke.github.io/tags/Python/"/>
    
      <category term="Dev" scheme="http://sunblognuke.github.io/categories/Dev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Sublime Text for Python Dev]]></title>
    <link href="http://sunblognuke.github.io/2016/01/13/Sublime-Text-for-Python-Dev/"/>
    <id>http://sunblognuke.github.io/2016/01/13/Sublime-Text-for-Python-Dev/</id>
    <published>2016-01-13T01:15:08.000Z</published>
    <updated>2016-01-13T02:42:18.181Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/sublimetext.jpg" alt=""></p>
<h2 id="何为Sublime_Text">何为Sublime Text</h2><p>Sublime Text是一个轻量、简洁、高效、跨平台的编辑器。Sublime Text更妙的是它的可扩展性，它拥有强大的插件支持，几乎无所不 能。目前已经更新到Sublime Text 3支持OS X、Windows、Windows 64 bit、Ubuntu 64 bit和 Ubuntu 32 bit。免费下载、超快速超稳定，可以处理大量超大文件。总之，这是一款神器级别的代码编辑器。</p>
<p>参考资料:</p>
<p><a href="http://www.iplaysoft.com/sublimetext.html" target="_blank" rel="external">http://www.iplaysoft.com/sublimetext.html</a></p>
<h2 id="安装Package_Control">安装Package Control</h2><p>1.通过快捷键 ctrl+`(Esc键下边或跟~公用的) 或者 View &gt; Show Console 打开控制台，然后粘贴相应的安装代码（Python代码），从<a href="https://packagecontrol.io/installation" target="_blank" rel="external">官方网站</a>可获取, 比如#st2:</p>
<pre><code>import urllib2,os,hashlib; h = <span class="string">'2915d1851351e5ee549c20394736b442'</span> + <span class="string">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class="keyword">if</span> <span class="operator">not</span> os.path.exists(ipp) <span class="keyword">else</span> None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); <span class="keyword">by</span> = urllib2.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.<span class="built_in">replace</span>(<span class="string">' '</span>, <span class="string">'%20'</span>)).<span class="built_in">read</span>(); dh = hashlib.sha256(<span class="keyword">by</span>).hexdigest(); <span class="built_in">open</span>( os.path.join( ipp, pf), <span class="string">'wb'</span> ).<span class="built_in">write</span>(<span class="keyword">by</span>) <span class="keyword">if</span> dh == h <span class="keyword">else</span> None; print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="string">'Please restart Sublime Text to finish installation'</span>)
</code></pre><p>2.回车运行安装代码。</p>
<p>3.重启Sublime Text 2/3。</p>
<p>4.如果在Perferences-&gt;package settings中看到package control这一项，则安装成功。</p>
<h2 id="利用Package_Control安装插件">利用Package Control安装插件</h2><p>1.按下Ctrl+Shift+P调出命令面板</p>
<p>2.输入install调出Install Package选项并回车，然后在列表中搜索或选中要安装的插件。如图:<br><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/SublimeText_Package_Control.png" alt="Pakcage Control: Install Package"></p>
<p>3.根据网络速度不同Package加载时间不等，稍等片刻即可安装指定插件。</p>
<h2 id="Python开发插件">Python开发插件</h2><ul>
<li><strong>SublimeCodeIntel</strong> 智能提示插件，为部分语言增强自动完成功能，包括Python 。这个插件同时也可以让你跳转到符号定义的地方，通过按住alt 并点击符号，非常方便。 </li>
<li><p><strong>SublimeREPL</strong> Python调试插件。可将Sublime Text布局模式切换为2行模式（Shift+Alt+8），然后tool-&gt;SublimeREPL-&gt;Python-&gt;Python - PDB Current File打开pdb调试界面。然后你就可以输出各种pdb命令进行调试了。比如：</p>
<pre><code>(Pdb) b <span class="number">31</span>              <span class="preprocessor">#在<span class="number">31</span>行建立断点</span>
(Pdb) r                 <span class="preprocessor">#运行到断点处</span>
(Pdb)                   <span class="preprocessor">#在这个命令行下就可以执行当前上下文的python</span>
</code></pre></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/sublimetext.jpg" alt=""></p>
<h2 id="何为Sublime_Text">何为Sublime Text</h2><p>Sublime Te]]>
    </summary>
    
      <category term="Python" scheme="http://sunblognuke.github.io/tags/Python/"/>
    
      <category term="Sublime Text" scheme="http://sunblognuke.github.io/tags/Sublime-Text/"/>
    
      <category term="Dev" scheme="http://sunblognuke.github.io/categories/Dev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python Tricks]]></title>
    <link href="http://sunblognuke.github.io/2016/01/12/Python-Tricks/"/>
    <id>http://sunblognuke.github.io/2016/01/12/Python-Tricks/</id>
    <published>2016-01-12T03:24:02.000Z</published>
    <updated>2016-01-12T06:43:05.283Z</updated>
    <content type="html"><![CDATA[<h2 id="数组合并去重">数组合并去重</h2><pre><code>urls = []
urls = []
urls.<span class="function"><span class="title">extend</span><span class="params">(urls2)</span></span>
<span class="function"><span class="title">list</span><span class="params">(set(urls)</span></span>)
</code></pre><h2 id="利用PIL比较两个图片的相似度">利用PIL比较两个图片的相似度</h2><p>需要安装<a href="http://www.pythonware.com/products/pil/" target="_blank" rel="external">PIL图像模块</a>，代码虽短但效果不错，还是非常靠谱的，前提是图片要大一些，太小的图片不好比较, 代码如下：</p>
<pre><code><span class="comment">#!/usr/bin/python</span>
<span class="comment"># -*- coding: utf-8 -*-</span>

<span class="keyword">import</span> Image, sys, os

reload(sys)
sys.setdefaultencoding(<span class="string">'utf-8'</span>)

<span class="function"><span class="keyword">def</span> <span class="title">make_regalur_image</span><span class="params">(img, size = <span class="params">(<span class="number">256</span>, <span class="number">256</span>)</span>)</span>:</span>
    <span class="keyword">return</span> img.resize(size).convert(<span class="string">'RGB'</span>)

<span class="function"><span class="keyword">def</span> <span class="title">split_image</span><span class="params">(img, part_size = <span class="params">(<span class="number">64</span>, <span class="number">64</span>)</span>)</span>:</span>
    w, h = img.size
    pw, ph = part_size

    <span class="keyword">assert</span> w % pw == h % ph == <span class="number">0</span>

    <span class="keyword">return</span> [img.crop((i, j, i+pw, j+ph)).copy() \
                <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, w, pw) \
                <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">0</span>, h, ph)]

<span class="function"><span class="keyword">def</span> <span class="title">hist_similar</span><span class="params">(lh, rh)</span>:</span>
    <span class="keyword">assert</span> len(lh) == len(rh)
    <span class="keyword">return</span> sum(<span class="number">1</span> - (<span class="number">0</span> <span class="keyword">if</span> l == r <span class="keyword">else</span> float(abs(l - r))/max(l, r)) <span class="keyword">for</span> l, r <span class="keyword">in</span> zip(lh, rh))/len(lh)

<span class="function"><span class="keyword">def</span> <span class="title">calc_similar</span><span class="params">(li, ri)</span>:</span>
<span class="comment">#   return hist_similar(li.histogram(), ri.histogram())</span>
    <span class="keyword">return</span> sum(hist_similar(l.histogram(), r.histogram()) <span class="keyword">for</span> l, r <span class="keyword">in</span> zip(split_image(li), split_image(ri))) / <span class="number">16.0</span>

<span class="function"><span class="keyword">def</span> <span class="title">calc_similar_by_path</span><span class="params">(lf, rf)</span>:</span>
    li, ri = make_regalur_image(Image.open(lf)), make_regalur_image(Image.open(rf))
    <span class="keyword">return</span> calc_similar(li, ri)

<span class="function"><span class="keyword">def</span> <span class="title">make_doc_data</span><span class="params">(lf, rf)</span>:</span>
    li, ri = make_regalur_image(Image.open(lf)), make_regalur_image(Image.open(rf))
    li.save(lf + <span class="string">'_regalur.png'</span>)
    ri.save(rf + <span class="string">'_regalur.png'</span>)
    fd = open(<span class="string">'stat.csv'</span>, <span class="string">'w'</span>)
    fd.write(<span class="string">'\n'</span>.join(l + <span class="string">','</span> + r <span class="keyword">for</span> l, r <span class="keyword">in</span> zip(map(str, li.histogram()), map(str, ri.histogram()))))
<span class="comment">#   print &gt;&gt;fd, '\n'</span>
<span class="comment">#   fd.write(','.join(map(str, ri.histogram())))</span>
    fd.close()
    <span class="keyword">import</span> ImageDraw
    li = li.convert(<span class="string">'RGB'</span>)
    draw = ImageDraw.Draw(li)
    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, <span class="number">256</span>, <span class="number">64</span>):
        draw.line((<span class="number">0</span>, i, <span class="number">256</span>, i), fill = <span class="string">'#ff0000'</span>)
        draw.line((i, <span class="number">0</span>, i, <span class="number">256</span>), fill = <span class="string">'#ff0000'</span>)
    li.save(lf + <span class="string">'_lines.png'</span>)

<span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:
    path = <span class="string">u'E:\\data\\tmp'</span> 
    toPath = <span class="string">u'E:\\data\\tmp'</span>

    path = path.replace(<span class="string">'\\'</span>, <span class="string">'/'</span>)
    toPath = toPath.replace(<span class="string">'\\'</span>, <span class="string">'/'</span>)

    <span class="keyword">print</span> <span class="string">'start compare similar....'</span>
    <span class="keyword">for</span> x <span class="keyword">in</span> os.listdir(path):
        <span class="keyword">for</span> y <span class="keyword">in</span> os.listdir(toPath):
            <span class="keyword">if</span> x == y:
                <span class="keyword">continue</span>

            degree = calc_similar_by_path(os.path.join(path,x), os.path.join(toPath,y))
            <span class="keyword">if</span> degree &gt; <span class="number">0.6</span>:
                <span class="keyword">print</span> <span class="string">'similar so much in test_case (%s &lt;-&gt; %s): %.3f%%'</span>%(x, y, degree * <span class="number">100</span>)
                <span class="comment"># make_doc_data(x, y)</span>

    <span class="keyword">print</span> <span class="string">'end compare similar....'</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="数组合并去重">数组合并去重</h2><pre><code>urls = []
urls = []
urls.<span class="function"><span class="title">extend</span><span class="params">]]>
    </summary>
    
      <category term="Python" scheme="http://sunblognuke.github.io/tags/Python/"/>
    
      <category term="Dev" scheme="http://sunblognuke.github.io/categories/Dev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python Troubleshooting]]></title>
    <link href="http://sunblognuke.github.io/2016/01/11/Python-Troubleshooting/"/>
    <id>http://sunblognuke.github.io/2016/01/11/Python-Troubleshooting/</id>
    <published>2016-01-11T03:57:03.000Z</published>
    <updated>2016-01-12T06:43:00.232Z</updated>
    <content type="html"><![CDATA[<h2 id="PyQuery:_一个类似jQuery的Python库">PyQuery: 一个类似jQuery的Python库</h2><p>PyQuery是一个类似于jQuery的Python库，也可以说是jQuery在Python上的实现。pyQuery是使用lxml来实现快速的xml和html操作的。具体的PyQuery文档见：<a href="http://pyquery.readthedocs.org/en/latest/api.html" target="_blank" rel="external">http://pyquery.org</a></p>
<h2 id="Python轻量级ORM_-_Peewee">Python轻量级ORM - Peewee</h2><p>最新API：<a href="http://peewee.readthedocs.org/en/latest/" target="_blank" rel="external">Python轻量级ORM - Peewee</a></p>
<p>like匹配语句:</p>
<pre><code>xxModel.<span class="function"><span class="title">select</span><span class="params">()</span></span>.<span class="function"><span class="title">where</span><span class="params">(xxModel.author ** <span class="string">'zh%'</span>)</span></span>
</code></pre><h2 id="requests-get_获取页面乱码">requests.get 获取页面乱码</h2><p>查看一下网页的编码，比如是gbk</p>
<pre><code><span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"Content-Type"</span> <span class="attribute">content</span>=<span class="value">"text/html; charset=gb2312"</span> /&gt;</span>
</code></pre><p>那就需要response设置为r.encoding=’gbk’, 代码如下:</p>
<pre><code>r = requests.<span class="function"><span class="title">get</span><span class="params">(self.url, headers=config.HEADERS)</span></span>
r<span class="class">.encoding</span> = <span class="string">'gb2312'</span>
return r.text
</code></pre><h2 id="urllib2-HTTPError:_HTTP_Error_403:_Forbidden">urllib2.HTTPError: HTTP Error 403: Forbidden</h2><p>解决方案：ulr请求需要模拟真实的浏览器访问，需要设置User-Agent项，最简便的方式就是随机获取，代码如下:</p>
<pre><code><span class="preprocessor"># -*- coding: UTF-8 -*-</span>
import sys
import <span class="built_in">random</span>

reload(sys)
sys.setdefaultencoding(<span class="string">'utf-8'</span>)

USER_AGENTS = [
                <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'</span>,
                <span class="string">'Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11'</span>,
                <span class="string">'Opera/9.25 (Windows NT 5.1; U; en)'</span>,
                <span class="string">'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)'</span>,
                <span class="string">'Mozilla/5.0 (compatible; Konqueror/3.5; Linux) KHTML/3.5.5 (like Gecko) (Kubuntu)'</span>,
                <span class="string">'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12'</span>,
                <span class="string">'Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9'</span>,
                <span class="string">'Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.7 (KHTML, like Gecko) Ubuntu/11.04 Chromium/16.0.912.77 Chrome/16.0.912.77 Safari/535.7'</span>,
                <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:10.0) Gecko/20100101 Firefox/10.0'</span>
            ]

<span class="preprocessor">#伪装浏览器头</span>
HEADERS = {
    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,
    <span class="string">'User-Agent'</span>: <span class="built_in">random</span>.choice(USER_AGENTS),
    <span class="string">'Referer'</span>: <span class="string">'http://www.baidu.com'</span> <span class="preprocessor"># or <span class="string">'http://www.google.cpm'</span></span>
}
</code></pre><h2 id="装饰器">装饰器</h2><h2 id="@classmethod_或_@staticmethod">@classmethod 或 @staticmethod</h2><p>参考知乎话题 - <a href="https://www.zhihu.com/question/21084971" target="_blank" rel="external">https://www.zhihu.com/question/21084971</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="PyQuery:_一个类似jQuery的Python库">PyQuery: 一个类似jQuery的Python库</h2><p>PyQuery是一个类似于jQuery的Python库，也可以说是jQuery在Python上的实现。pyQuery是使用lxml来实现]]>
    </summary>
    
      <category term="Framework" scheme="http://sunblognuke.github.io/tags/Framework/"/>
    
      <category term="Python" scheme="http://sunblognuke.github.io/tags/Python/"/>
    
      <category term="Resources" scheme="http://sunblognuke.github.io/categories/Resources/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[The Zen of Python]]></title>
    <link href="http://sunblognuke.github.io/2016/01/07/The-Zen-of-Python/"/>
    <id>http://sunblognuke.github.io/2016/01/07/The-Zen-of-Python/</id>
    <published>2016-01-07T03:47:25.000Z</published>
    <updated>2016-01-07T05:09:01.722Z</updated>
    <content type="html"><![CDATA[<pre><code>&gt;&gt;&gt; <span class="keyword">import</span> <span class="keyword">this</span>
</code></pre><p>The Zen of Python, by Tim Peters</p>
<blockquote>
<p>Beautiful is better than ugly.</p>
<p>Explicit is better than implicit.</p>
<p>Simple is better than complex.</p>
<p>Complex is better than complicated.</p>
<p>Flat is better than nested.</p>
<p>Sparse is better than dense.</p>
<p>Readability counts.</p>
<p>Special cases aren’t special enough to break the rules.</p>
<p>Although practicality beats purity.</p>
<p>Errors should never pass silently.</p>
<p>Unless explicitly silenced.</p>
<p>In the face of ambiguity, refuse the temptation to guess.</p>
<p>There should be one– and preferably only one –obvious way to do it.</p>
<p>Although that way may not be obvious at first unless you’re Dutch.</p>
<p>Now is better than never.</p>
<p>Although never is often better than <em>right</em> now.</p>
<p>If the implementation is hard to explain, it’s a bad idea.</p>
<p>If the implementation is easy to explain, it may be a good idea.</p>
<p>Namespaces are one honking great idea – let’s do more of those!</p>
</blockquote>
<p><strong>翻译如下：</strong></p>
<p>Python之禅 by Tim Peters</p>
<blockquote>
<p>优美胜于丑陋（Python 以编写优美的代码为目标）</p>
<p>明了胜于晦涩（优美的代码应当是明了的，命名规范，风格相似）</p>
<p>简洁胜于复杂（优美的代码应当是简洁的，不要有复杂的内部实现）</p>
<p>复杂胜于凌乱（如果复杂不可避免，那代码间也不能有难懂的关系，要保持接口简洁）</p>
<p>扁平胜于嵌套（优美的代码应当是扁平的，不能有太多的嵌套）</p>
<p>间隔胜于紧凑（优美的代码有适当的间隔，不要奢望一行代码解决问题）</p>
<p>可读性很重要（优美的代码是可读的）</p>
<p>即便假借特例的实用性之名，也不可违背这些规则（这些规则至高无上）</p>
<p>不要包容所有错误，除非你确定需要这样做（精准地捕获异常，不写 except:pass 风格的代码）</p>
<p>当存在多种可能，不要尝试去猜测，而是尽量找一种，最好是唯一一种明显的解决方案（如果不确定，就用穷举法）</p>
<p>虽然这并不容易，因为你不是 Python 之父（这里的 Dutch 是指 Guido ）</p>
<p>做也许好过不做，但不假思索就动手还不如不做（动手之前要细思量）</p>
<p>如果你无法向人描述你的方案，那肯定不是一个好方案；反之亦然（方案测评标准）</p>
<p>命名空间是一种绝妙的理念，我们应当多加利用（倡导与号召）</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<pre><code>&gt;&gt;&gt; <span class="keyword">import</span> <span class="keyword">this</span>
</code></pre><p>The Zen of Python, by Tim Pete]]>
    </summary>
    
      <category term="Python" scheme="http://sunblognuke.github.io/tags/Python/"/>
    
      <category term="Dev" scheme="http://sunblognuke.github.io/categories/Dev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[网络排查]]></title>
    <link href="http://sunblognuke.github.io/2015/12/23/Network-Troubleshooting/"/>
    <id>http://sunblognuke.github.io/2015/12/23/Network-Troubleshooting/</id>
    <published>2015-12-23T03:18:54.000Z</published>
    <updated>2015-12-23T07:20:51.696Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/network%20topology.jpg" alt=""></p>
<p><a href="http://xpleaf.blog.51cto.com/9315560/1689438" target="_blank" rel="external">网络排错大讲解</a></p>
<h2 id="基本命令">基本命令</h2><table>
<thead>
<tr>
<th>命令</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>ipconfig</td>
<td>查看计算机的IP 地址、子网掩码和网关</td>
</tr>
<tr>
<td>ipconfig /all</td>
<td>查看计算机的IP 地址、子网掩码、网关和DNS 地址</td>
</tr>
<tr>
<td>ping</td>
<td>测试主机之间的网络连通性</td>
</tr>
<tr>
<td>nslookup</td>
<td>请求域名对应的IP 地址，并以此测试DNS 地址是否可用</td>
</tr>
<tr>
<td>tracert -d</td>
<td>路由追踪，并且不做反向解析</td>
</tr>
<tr>
<td>arp -a</td>
<td>查看计算机是否已获取到网关的MAC地址</td>
</tr>
</tbody>
</table>
<h2 id="抓包工具">抓包工具</h2><h2 id="广播风暴">广播风暴</h2><h2 id="VLAN_、IP分部门管理">VLAN 、IP分部门管理</h2><h2 id="ARP防火墙">ARP防火墙</h2>]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/network%20topology.jpg" alt=""></p>
<p><a href="http://xpleaf.blog.51cto.com/9315560/]]>
    </summary>
    
      <category term="Network" scheme="http://sunblognuke.github.io/tags/Network/"/>
    
      <category term="Resources" scheme="http://sunblognuke.github.io/categories/Resources/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[科学上网之DNS]]></title>
    <link href="http://sunblognuke.github.io/2015/12/22/Play-with-DNS/"/>
    <id>http://sunblognuke.github.io/2015/12/22/Play-with-DNS/</id>
    <published>2015-12-22T06:31:03.000Z</published>
    <updated>2015-12-23T03:04:12.054Z</updated>
    <content type="html"><![CDATA[<h2 id="何为DNS?">何为DNS?</h2><p>DNS 的全称是 Domain Name System 或者 Domain Name Service，以显浅的语言来解释，对于上网的用户来说，DNS 就是一台(或多台)在网络上的服务器，专门为大家上网时解析网址的IP地址的。互联网被发明时是需要靠 IP 地址去定位网络上的服务器或网络设备的，它可以看做是一个网站的门牌号，但IP地址(如 124.122.45.2)这样的数字实在太难被人们所记住，如果上任何网站都需要输入这样的地址恐怕对任何人来说都是噩梦！于是，人们发明了域名（网址），也就是像 iPlaySoft.com 这样有意义的单词组合来帮助人们记忆与输入。</p>
<p>不过，虽然人能看懂域名，但电脑却只懂 IP 地址，那怎么办呢？嗯，当你用电脑访问异次元的域名 www.iPlaySoft.com 时，就要有一位懂得“翻译”的“指路人”去告诉你的电脑，www.iPlaySoft.com 究竟对应的是哪个IP地址了，这样你的电脑才懂得怎样去找到异次元的服务器并下载你要访问的网页内容。而这个“指路人”的角色就是DNS。</p>
<p>更详细参看百科词条: <a href="http://baike.baidu.com/item/dns/427444" target="_blank" rel="external">http://baike.baidu.com/item/dns/427444</a></p>
<p><a href="http://dudns.baidu.com/intro.html" target="_blank" rel="external">DNS知识平台</a></p>
<h1 id="手动修改DNS">手动修改DNS</h1><p><a href="http://dudns.baidu.com/useDoc.html" target="_blank" rel="external">设置DNS详细教程</a></p>
<p>一般修改了dns, 需要手动清除本地的dns缓存: 进入命令行提示符，输入 ipconfig /flushdns 并回车即可。</p>
<h1 id="第三方DNS_服务">第三方DNS 服务</h1><ol>
<li><a href="http://www.114dns.com/index.html" target="_blank" rel="external">114DNS</a>: 114.114.114.114</li>
<li>谷歌DNS: 8.8.8.8 / 8.8.4.4</li>
<li><a href="http://www.alidns.com/index.html" target="_blank" rel="external">阿里DNS</a>: 223.5.5.5 / 223.6.6.6</li>
<li><a href="http://dudns.baidu.com/" target="_blank" rel="external">百度DNS</a>: 180.76.76.76</li>
</ol>
<h1 id="自动化软件_-_DnsJumper">自动化软件  - DnsJumper</h1><p>DNS Jumper 完全免费，绿色免安装，体积非常小巧，经测试支持 Windows 8、Win7、Vista、XP，支持64位与32位系统，支持多网卡分别设置（譬如WIFI无线网卡以及普通的以太网网卡），提供了包含简体中文在内的多国语言。</p>
<p>它不但内置了 Google Open DNS、Comodo DNS 等大量免费公共DNS，还可以让用户自由手动添加/删除自己收集的地址。更实用的是，它还可以为你的DNS列表批量测速并自动选择最快的进行应用，而且也能一键清空本地DNS缓存。</p>
<p><a href="http://www.iplaysoft.com/dnsjumper.html" target="_blank" rel="external">下载地址</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="何为DNS?">何为DNS?</h2><p>DNS 的全称是 Domain Name System 或者 Domain Name Service，以显浅的语言来解释，对于上网的用户来说，DNS 就是一台(或多台)在网络上的服务器，专门为大家上网时解析网址的IP地址]]>
    </summary>
    
      <category term="DNS" scheme="http://sunblognuke.github.io/tags/DNS/"/>
    
      <category term="Resources" scheme="http://sunblognuke.github.io/categories/Resources/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git最佳实践]]></title>
    <link href="http://sunblognuke.github.io/2015/12/22/Git-Best-Practices/"/>
    <id>http://sunblognuke.github.io/2015/12/22/Git-Best-Practices/</id>
    <published>2015-12-22T00:31:58.000Z</published>
    <updated>2015-12-22T01:31:54.724Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/Git.png" alt="Git最佳实践"></p>
<p>参考资源：</p>
<p><a href="http://blog.jobbole.com/22647/" target="_blank" rel="external">图解Git/图形化的Git参考手册</a><br><a href="http://blog.jobbole.com/23398/" target="_blank" rel="external">Git分支管理策略</a><br><a href="http://blog.jobbole.com/13916/" target="_blank" rel="external">Git 分支管理是一门艺术</a></p>
<p>1) $ git checkout -b myfeature develop<br>Switched to a new branch “myfeature”</p>
<p>2) $ git checkout develop<br>Switched to branch ‘develop’</p>
<p>$ git merge –no-ff myfeature<br>Updating ea1b82a..05e9557<br>(Summary of changes)</p>
<p>$ git branch -d myfeature<br>Deleted branch myfeature (was 05e9557).</p>
<p>$ git push origin develop</p>
<p>3) $ git checkout master<br>Switched to branch ‘master’</p>
<p>$ git merge –no-ff release-1.2<br>Merge made by recursive.<br>(Summary of changes)</p>
<p>$ git tag -a 1.2 -m ‘comments here’<br>$ git push –tags</p>
<p>show all tags<br>$ git tag -n or git tag -n5<br>$ git show v5.0</p>
<p>git tag -d 12345<br>git push origin :refs/tags/12345</p>
<p>4) $ git commit -a -m “Bumped version number to 1.2.1”</p>
<p>5) Push only to a remote branch</p>
<p>   $ git checkout feature_x<br>   $ git push origin feature_x</p>
<p>With modern git you should be able to simply “git push origin HEAD”, or even “git push HEAD” to push only currently checked-out branch</p>
<p>6) push and delete remote branches</p>
<p>$ git push origin :newfeature</p>
<p>7) shows all local and remote branches<br>$ git branch -a</p>
<p>shows only remote branches.<br>$ git branch -r</p>
<p>8) When “git unable to push to unqualified destination” occured, try to<br>Do “git fetch -p origin” to make refs/remotes/origin/my_remote_branch go away if it’s already deleted in origin. The -p option tells fetch to delete any tracking branches that no longer exist in the corresponding remotes; by default they are kept around.</p>
<p>9) Git分支管理策略，如图：</p>
<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/git_art.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/Git.png" alt="Git最佳实践"></p>
<p>参考资源：</p>
<p><a href="http://blog.jobbole.com/22647/" ]]>
    </summary>
    
      <category term="Git" scheme="http://sunblognuke.github.io/tags/Git/"/>
    
      <category term="Workflow" scheme="http://sunblognuke.github.io/tags/Workflow/"/>
    
      <category term="Dev" scheme="http://sunblognuke.github.io/categories/Dev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[DNN8 Development]]></title>
    <link href="http://sunblognuke.github.io/2015/12/14/DNN8-Development/"/>
    <id>http://sunblognuke.github.io/2015/12/14/DNN8-Development/</id>
    <published>2015-12-14T13:07:57.000Z</published>
    <updated>2015-12-16T07:10:18.833Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/SPA.png" alt=""></p>
<h2 id="What_is_SPA?">What is SPA?</h2><blockquote>
<p>A Single-page application (SPA), also known as a single-page interface (SPI), is a web application or web site that fits on a single web page with the goal of providing a more fluid user experience.</p>
</blockquote>
<p><a href="http://www.seguetech.com/blog/2013/04/18/what-is-single-page-application" target="_blank" rel="external">Single Page Application</a></p>
<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/dnn_versions.jpg" alt=""></p>
<h2 id="Breaking_changes">Breaking changes</h2><ol>
<li>支持.net 4.5+版本</li>
<li>向上兼容IE8+</li>
<li>所有管理模块可插拔</li>
<li>默认删除导航提供模块，只保留DDR</li>
<li>轻量级default.css</li>
<li>剔除Telerik控件</li>
<li>更多查看下边链接…</li>
</ol>
<p><a href="http://www.dnnsoftware.com/wiki/dnn-8-breaking-changes" target="_blank" rel="external">DNN 8 BREAKING CHANGES</a></p>
<h2 id="Set_up_environment">Set up environment</h2><p><a href="http://www.dnnsoftware.com/community-blog/cid/155221/module-development-in-dnn-8-3--introduction-to-spa-modules" target="_blank" rel="external">Introduction to SPA modules</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/SPA.png" alt=""></p>
<h2 id="What_is_SPA?">What is SPA?</h2><blockquote>
<p>A Single-]]>
    </summary>
    
      <category term="DNN8" scheme="http://sunblognuke.github.io/tags/DNN8/"/>
    
      <category term="MVC" scheme="http://sunblognuke.github.io/tags/MVC/"/>
    
      <category term="SPA" scheme="http://sunblognuke.github.io/tags/SPA/"/>
    
      <category term="Dev" scheme="http://sunblognuke.github.io/categories/Dev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[神秘的程序员]]></title>
    <link href="http://sunblognuke.github.io/2015/12/14/Programmers/"/>
    <id>http://sunblognuke.github.io/2015/12/14/Programmers/</id>
    <published>2015-12-14T11:05:00.000Z</published>
    <updated>2015-12-14T11:58:39.239Z</updated>
    <content type="html"><![CDATA[<p><strong>来源：</strong><a href="http://blog.xiqiao.info/" target="_blank" rel="external">西乔的八卦</a></p>
<p>这个系列的漫画讲述程序员——这种神秘人类的囧事，故事多来源于我身边的程序员朋友。</p>
<ol>
<li><a href="/2015/12/14/Programmers/#传奇创业">传奇创业</a></li>
<li><a href="/2015/12/14/Programmers/#最佳注释">最佳注释</a></li>
<li><a href="/2015/12/14/Programmers/#有效警告">有效警告</a></li>
</ol>
<a id="more"></a>
<h2 id="传奇创业">传奇创业</h2><p><img src="http://blog.xiqiao.info/blogimg/programmers/54_startup_legend.gif" alt=""></p>
<h2 id="最佳注释">最佳注释</h2><p><img src="http://blog.xiqiao.info/wp-content/uploads/2012/08/40_best_comment.gif" alt=""></p>
<h2 id="有效警告">有效警告</h2><p><img src="http://blog.xiqiao.info/blogimg/programmers/warning.gif" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>来源：</strong><a href="http://blog.xiqiao.info/">西乔的八卦</a></p>
<p>这个系列的漫画讲述程序员——这种神秘人类的囧事，故事多来源于我身边的程序员朋友。</p>
<ol>
<li><a href="/2015/12/14/Programmers/#传奇创业">传奇创业</a></li>
<li><a href="/2015/12/14/Programmers/#最佳注释">最佳注释</a></li>
<li><a href="/2015/12/14/Programmers/#有效警告">有效警告</a></li>
</ol>]]>
    
    </summary>
    
      <category term="Programmers" scheme="http://sunblognuke.github.io/tags/Programmers/"/>
    
      <category term="Startup" scheme="http://sunblognuke.github.io/tags/Startup/"/>
    
      <category term="Dev" scheme="http://sunblognuke.github.io/categories/Dev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何重设DNN用户密码]]></title>
    <link href="http://sunblognuke.github.io/2015/12/14/Recover-Password-for-DNN/"/>
    <id>http://sunblognuke.github.io/2015/12/14/Recover-Password-for-DNN/</id>
    <published>2015-12-14T03:18:38.000Z</published>
    <updated>2015-12-14T06:16:13.665Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/password.jpg?imageView2/2/w/680/q/90" alt=""></p>
<p>在当今信息时代，管理密码本是一件很费时费力的事情。相对于DNN这一平台，由于版本较多不可避免地在开发过程中会搭建好多本地站点，时不时忘记密码也是常有的事。</p>
<h2 id="超级用户">超级用户</h2><h3 id="终极方案">终极方案</h3><p><strong>前提：</strong>有权限操作数据库db。</p>
<p><strong>原理：</strong>把aspnet_membership表中的”XX_UserName”用户的password和password_salt值拷贝并覆盖host用户对应的值。</p>
<p>在SQL Management Studio执行如下Query SQL script：</p>
<pre><code>/*
 -- Database Utility ---------------------------------------------------------------------------
 Description : Reset a Password <span class="keyword">in</span> a DotNetNuke database
 Author : Tony Tullemans
 <span class="built_in">Date</span> Created : <span class="number">18.04</span><span class="number">.2007</span>
 Note/s : Before you run this script you must know the UserName <span class="keyword">and</span> Password <span class="keyword">of</span> another
 registered DNN user <span class="keyword">in</span> the database you wish <span class="keyword">to</span> affect.
 -----------------------------------------------------------------------------------------------
 */

<span class="keyword">DECLARE</span> @databaseName VARCHAR(<span class="number">128</span>)
<span class="keyword">SELECT</span> @databaseName = DB_NAME()

PRINT <span class="comment">'RESET PASSWORD IN DATABASE : ' + @databaseName</span>
PRINT <span class="comment">'-----------------------------' + REPLICATE('-', DATALENGTH(@databaseName ));</span>

<span class="keyword">DECLARE</span> @knownUserName NVARCHAR(<span class="number">128</span>)
<span class="keyword">DECLARE</span> @lostUserName NVARCHAR(<span class="number">128</span>)
<span class="keyword">DECLARE</span> @lostUserId NVARCHAR(<span class="number">128</span>)
<span class="keyword">DECLARE</span> @knownPassword NVARCHAR(<span class="number">128</span>)
<span class="keyword">DECLARE</span> @knownSalt NVARCHAR(<span class="number">128</span>)

<span class="keyword">SET</span> @knownUserName = <span class="comment">'windy' /* WHAT YOU NEED TO MODIFY */</span>
<span class="keyword">SET</span> @lostUserName = <span class="comment">'host'</span>

<span class="keyword">SELECT</span> @knownPassword = Password, @knownSalt = PasswordSalt
<span class="keyword">FROM</span> aspnet_Membership
INNER <span class="keyword">JOIN</span> aspnet_users
<span class="keyword">ON</span> aspnet_Membership.UserId = aspnet_users.UserId
<span class="keyword">where</span> UserName = @knownUserName;

PRINT <span class="comment">''</span>
PRINT <span class="comment">'Known Password for "' + @knownUserName + '" is : ' + @knownPassword</span>
PRINT <span class="comment">'Known Password Salt for "' + @knownUserName + '" is : ' + @knownSalt</span>

<span class="keyword">SELECT</span> @lostUserId = aspnet_Membership.UserId
<span class="keyword">FROM</span> aspnet_Membership
INNER <span class="keyword">JOIN</span> aspnet_users
<span class="keyword">ON</span> aspnet_Membership.UserId = aspnet_users.UserId
<span class="keyword">WHERE</span> UserName = @lostUserName;

PRINT <span class="comment">''</span>
PRINT <span class="comment">'UserID for "' + @lostUserName + '" is : ' + @lostUserId</span>
PRINT <span class="comment">''</span>

<span class="keyword">IF</span> (DATALENGTH(@lostUserName) &lt;= <span class="number">0</span> <span class="keyword">OR</span> @lostUserName <span class="keyword">IS</span> NULL)
PRINT <span class="comment">'Invalid Lost User Name ' + @lostUserName</span>
<span class="keyword">ELSE</span> BEGIN
<span class="keyword">IF</span> (DATALENGTH(@knownUserName) &lt;= <span class="number">0</span> <span class="keyword">OR</span> @knownUserName <span class="keyword">IS</span> NULL)
PRINT <span class="comment">'Invalid Lost User Name ' + @lostUserName</span>
<span class="keyword">ELSE</span> BEGIN
<span class="keyword">IF</span> (DATALENGTH(@knownPassword) &lt;= <span class="number">0</span> <span class="keyword">OR</span> @knownPassword <span class="keyword">IS</span> NULL)
PRINT <span class="comment">'Invalid Known Password ' + @knownPassword</span>
<span class="keyword">ELSE</span> BEGIN
<span class="keyword">IF</span> (DATALENGTH(@knownSalt) &lt;= <span class="number">0</span> <span class="keyword">OR</span> @knownSalt <span class="keyword">IS</span> NULL)
PRINT <span class="comment">'Invalid Known Salt ' + @knownSalt</span>
<span class="keyword">ELSE</span> BEGIN
PRINT <span class="comment">''</span>
PRINT <span class="comment">'BEFORE'</span>
<span class="keyword">SELECT</span> left(UserName, <span class="number">12</span>) <span class="keyword">as</span> UserName, aspnet_Membership.UserId, left(Email, <span class="number">20</span>) <span class="keyword">as</span> Email, Password, PasswordSalt
<span class="keyword">FROM</span> aspnet_Membership INNER <span class="keyword">JOIN</span> aspnet_users <span class="keyword">ON</span> aspnet_Membership.UserId = aspnet_users.UserId
<span class="keyword">WHERE</span> UserName <span class="keyword">IN</span> ( @knownUserName, @lostUserName );
PRINT <span class="comment">''</span>
PRINT <span class="comment">'Changing Password for User Id("' + @lostUserId + '") to: "' + @knownPassword + '"'</span>
PRINT <span class="comment">''</span>
UPDATE aspnet_Membership
<span class="keyword">SET</span> Password = @knownPassword,
PasswordSalt = @knownSalt
-- <span class="keyword">SELECT</span> UserId, Password, PasswordSalt
-- <span class="keyword">FROM</span> aspnet_Membership
<span class="keyword">WHERE</span> UserId = @lostUserId;
PRINT <span class="comment">''</span>
PRINT <span class="comment">'AFTER'</span>
<span class="keyword">SELECT</span> left(UserName, <span class="number">12</span>) <span class="keyword">as</span> UserName, aspnet_Membership.UserId, left(Email, <span class="number">20</span>) <span class="keyword">as</span> Email, Password, PasswordSalt
<span class="keyword">FROM</span> aspnet_Membership INNER <span class="keyword">JOIN</span> aspnet_users <span class="keyword">ON</span> aspnet_Membership.UserId = aspnet_users.UserId
<span class="keyword">WHERE</span> UserName <span class="keyword">IN</span> ( @knownUserName, @lostUserName );
<span class="keyword">END</span>
<span class="keyword">END</span>
<span class="keyword">END</span>
<span class="keyword">END</span>
GO

PRINT <span class="comment">''</span>
PRINT <span class="comment">' * * * END OF SCRIPT * * *'</span>
PRINT <span class="comment">''</span>
GO
</code></pre><h3 id="手动模式">手动模式</h3><p><strong>前提：</strong>开放注册功能和有权限操作数据库db。<br><strong>原理：</strong>创建新用户并手动到数据库，在表ASPNet_Membership查询出host和新用户的记录，把新用户的password和password_salt值拷贝并覆盖host用户对应相同的列上。</p>
<p>As there are frequent requests from users, who lost the password of the host account (and you cannot request the host password by email), the following solution will help for all DNN 3 and 4 installation. Please note, that your need direct access to the database to suceed with the issue:</p>
<ol>
<li>if “register” is not displayed for the portal, go to table “Portals”  in your database and enter value “2” into column “Registration”.</li>
<li>create a new user account by registration (this time, please remember the password you enter!)</li>
<li>go to database, enter table “ASPNet_Membership”</li>
<li>go to new user account (usually the last one) and copy the encrypted values of columns “Password” and “PasswordSalt” into the same columns of user account “host” (usually th first entry in this table) </li>
<li>login as user “host” using the new password and delete the reshly created other user.</li>
</ol>
<p>Keep remembering your password ;)</p>
<h3 id="代码模式（不推荐使用）">代码模式（不推荐使用）</h3><p><strong>前提：</strong>有权限访问FTP。<br><strong>原理：</strong>调用核心API获取Host用户输出到页面。<br><strong>缺点：</strong> 加密方式为Hashed不可用；操作完成务必删除。</p>
<pre><code><span class="tag">&lt;<span class="title">%@</span> <span class="attribute">Page</span> <span class="attribute">Language</span>=<span class="value">"C#"</span> %&gt;</span>
<span class="tag">&lt;<span class="title">script</span> <span class="attribute">runat</span>=<span class="value">"server"</span>&gt;</span><span class="javascript">
    <span class="keyword">void</span> Page_Load(object sender, System.EventArgs e)
    {
        DotNetNuke.Entities.Users.UserInfo uInfo = 
DotNetNuke.Entities.Users.UserController.GetUserById(<span class="number">0</span>, <span class="number">1</span>);
        <span class="keyword">if</span> (uInfo != <span class="literal">null</span>)
        {
            string password = 
DotNetNuke.Entities.Users.UserController.GetPassword(ref uInfo, <span class="built_in">String</span>.Empty);
            Response.Write(<span class="string">"Password: "</span> + password);
        }
        <span class="keyword">else</span>
        {
            Response.Write(<span class="string">"UserInfo object is null"</span>);
        }
    }
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
    <span class="tag">&lt;<span class="title">head</span>&gt;</span>
        <span class="tag">&lt;<span class="title">title</span>&gt;</span>Recover Password<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</code></pre><h2 id="普通用户">普通用户</h2><h3 id="核心方案">核心方案</h3><p>通过注册模块点击重设密码链接获取邮件提醒。</p>
<p><a href="http://www.dnnsoftware.com/wiki/recover-passwords" target="_blank" rel="external">DNN Wiki - Recover Passwords</a></p>
<h3 id="第三方模块">第三方模块</h3><p><a href="https://dnnsecurepasswordrec.codeplex.com/" target="_blank" rel="external">IowaComputerGurus’s Secure Password Recovery module</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/password.jpg?imageView2/2/w/680/q/90" alt=""></p>
<p>在当今信息时代，管理密码本是一件很费时费力的事情。相对于DNN这]]>
    </summary>
    
      <category term="DotNetNuke" scheme="http://sunblognuke.github.io/tags/DotNetNuke/"/>
    
      <category term="Dev" scheme="http://sunblognuke.github.io/categories/Dev/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[你应该知道的定律和规则]]></title>
    <link href="http://sunblognuke.github.io/2015/12/10/Laws-Rules-You-Should-Know/"/>
    <id>http://sunblognuke.github.io/2015/12/10/Laws-Rules-You-Should-Know/</id>
    <published>2015-12-10T04:14:27.000Z</published>
    <updated>2015-12-14T06:19:41.997Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/clean.png" alt=""></p>
<h2 id="墨菲定律">墨菲定律</h2><p>“墨菲定律”是一种心理学效应，是由爱德华·墨菲（Edward A. Murphy）提出的。主要内容：</p>
<p>一、任何事都没有表面看起来那么简单；<br>二、所有的事都会比你预计的时间长；<br>三、会出错的事总会出错；<br>四、如果你担心某种情况发生，那么它就更有可能发生。</p>
<p>墨菲定律的原句是这样的：如果有两种或两种以上的方式去做某件事情，而其中一种选择方式将导致灾难，则必定有人会做出这种选择。</p>
<p>这句话迅速流传。墨菲定律是其作出的著名论断，亦称莫非定律、墨菲定理，是西方世界常用的俚语。</p>
<p>墨菲定律主要内容是：如果事情有变坏的可能，不管这种可能性有多小，它总会发生。</p>
<p>参考资源：</p>
<p><a href="http://baike.baidu.com/view/40544.htm" target="_blank" rel="external">http://baike.baidu.com/view/40544.htm</a></p>
<h2 id="二八定律">二八定律</h2><p>1897年，意大利经济学家帕列托在对19世纪英国社会各阶层的财富和收益统计分析时发现：80%的社会财富集中在20%的人手里，而80%的人只拥有社会财富的20%，这就是“二八法则”。“二八法则”反应了一种不平衡性，但它却在社会、经济及生活中无处不在。</p>
<p>在商品营销中，商家往往会认为所有顾客一样重要；所有生意、每一种产品都必须付出相同的努力，所有机会都必须抓住。而“二八法则”恰恰指出了在原因和结果、投入和产出、努力和报酬之间存在这样一种典型的不平衡现象：80%的成绩，归功于20%的努力；市场上80%的产品可能是20%的企业生产的；20% 的顾客可能给商家带来80%的利润。遵循“二八法则”的企业在经营和管理中往往能抓住关键的少数顾客，精确定位，加强服务，达到事半功倍的效果。美国的普尔斯马特会员店始终坚持会员制，就是基于这一经营理念。</p>
<p>“二八法则”同样适用于我们的生活，如一个人应该选择在几件事上追求卓越，而不必强求在每件事上都有好的表现；锁定少数能完成的人生目标，而不必追求所有的机会。</p>
<p>参考资源：</p>
<p><a href="http://baike.baidu.com/view/40591.htm" target="_blank" rel="external">http://baike.baidu.com/view/40591.htm</a></p>
<h2 id="零和博弈">零和博弈</h2><p>一个游戏无论几个人来玩，总有输家和赢家，赢家所赢的都是输家所翰的，所以无论输赢多少，正负相抵，最后游戏的总和都为零，这就是零和游戏。</p>
<p>零和游戏之所以受人关注，是因为人们在社会生活中处处都能找到与零和游戏雷同或类似的现象。我们大肆开发利用煤炭石油资源，留给后人的便越来越少；我们研究生产了大量的转基因产品，一些新的病毒也跟着冒了出来；我们修筑了葛洲坝水利工程，白鳍豚就再也不能洄游到金沙江产卵了……</p>
<p>发展是硬道理。人类在经历了经济高速增长、科技迅猛发展、全球经济一体化及曰益严重的生态破坏、环境污染之后，可持续发展理论才逐渐浮出水面。零和游戏原理正在逐渐为“双赢”观念所取代，人们逐渐认识到“利己”而不“损人”才是最美好的结局。实践证明，通过有效合作，实现皆大欢喜的结局是可能的。</p>
<p>领导者要善于跳出“零和”的圈子，寻找能够实现“双赢”的机遇和突破口，防止负面影响抵消正面成绩。批评下属如何才能做到使其接受而不抵触，发展经济如何才能做到不损害环境，开展竞争如何使自己胜出而不让对方受到伤害，这些都是每一个为官者应该仔细思考的问题。</p>
<p>参考资源：</p>
<p><a href="http://baike.baidu.com/view/196849.htm" target="_blank" rel="external">http://baike.baidu.com/view/196849.htm</a></p>
<h2 id="破窗理论">破窗理论</h2><p>破窗效应（英语：Broken windows theory）是犯罪学的一个理论，该理论由詹姆士·威尔逊（James Q. Wilson）及乔治·凯林（George L. Kelling）提出，并刊于《The Atlantic Monthly》1982年3月版的一篇题为《Broken Windows》的文章。此理论认为环境中的不良现象如果被放任存在，会诱使人们仿效，甚至变本加厉。</p>
<p>一幢有少许破窗的建筑为例，如果那些窗不被修理好，可能将会有破坏者破坏更多的窗户。最终他们甚至会闯入建筑内，如果发现无人居住，也许就在那里定居或者纵火。一面墙，如果出现一些涂鸦没有被清洗掉，很快的，墙上就布满了乱七八糟、不堪入目的东西；一条人行道有些许纸屑，不久后就会有更多垃圾，最终人们会视若理所当然地将垃圾顺手丢弃在地上。这个现象，就是犯罪心理学中的破窗效应！</p>
<p>参考资源：</p>
<p><a href="http://baike.baidu.com/view/298167.htm" target="_blank" rel="external">http://baike.baidu.com/view/298167.htm</a></p>
<h2 id="奥卡姆剃刀定律">奥卡姆剃刀定律</h2><p>12世纪，英国奥卡姆的威廉主张唯名论，只承认确实存在的东西，认为那些空洞无物的普遍性概念都是无用的累赘，应当被无情地“剃除”。他主张“如无必要，勿增实体”。这就是常说的“奥卡姆剃刀”。这把剃刀曾使很多人感到威胁，被认为是异端邪说，威廉本人也因此受到迫害。然而，并未损害这把刀的锋利，相反，经过数百年的岁月，奥卡姆剃刀已被历史磨得越来越快，并早已超载原来狭窄的领域，而具有广泛、丰富、深刻的意义。</p>
<p>奥卡姆剃刀定律在企业管理中可进一步演化为简单与复杂定律：把事情变复杂很简单，把事情变简单很复杂。这个定律要求，我们在处理事情时，要把握事情的主要实质，把握主流，解决最根本的问题，尤其要顺应自然，不要把事情人为地复杂化，这样才能把事情处理好。</p>
<p>参考资源：</p>
<p><a href="http://baike.baidu.com/view/646319.htm" target="_blank" rel="external">http://baike.baidu.com/view/646319.htm</a></p>
<h2 id="水桶效应">水桶效应</h2><p>一只水桶能装多少水取决于水桶中最短的一块木板而不是最长的那块木板。</p>
<p>任何组织几乎都有一个共同的特点，即构成组织的各个部分往往是优劣不齐的，但劣势部分却往往决定着整个组织的水平。问题是劣势部分是组织中一个有用的部分，你不能把它当成烂苹果扔掉，否则，你会一点水也装不了，可它却让你那些长的东西白长了!</p>
<p>劣势决定优势，劣势决定生死，这是市场竞争的残酷法则。水桶定律告诉我们，领导者要有忧患意识，如果你个人身上某个方面是“最短的一块”，你应该考虑尽快把它补起来；如果你所领导的集体中存在着“一块最短的木板”，你一定要迅速将它做长补齐，否则，它带给你的损失可能是毁灭性的—叫艮多时候，往往就是因为一件事没做好而毁了所有的努力。有些人也许不知道水桶定律，但都知道“一票否决”，这是中国的“水桶”，有了它你便知道水桶定律是多么重要。</p>
<p>决策和执行发生的机率。让谋划的人尽心谋划，让执行的人全力执行，让他们都从中获得间接而不是直接的功利，这样我们才能把“粥”分得更好。当然，还应有必不可少的独立的监督。</p>
<p>参考资源：</p>
<p><a href="http://baike.baidu.com/view/47735.htm" target="_blank" rel="external">http://baike.baidu.com/view/47735.htm</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/clean.png" alt=""></p>
<h2 id="墨菲定律">墨菲定律</h2><p>“墨菲定律”是一种心理学效应，是由爱德华·墨菲（Edward A. Mu]]>
    </summary>
    
      <category term="Laws &amp; Rule" scheme="http://sunblognuke.github.io/tags/Laws-Rule/"/>
    
      <category term="Life" scheme="http://sunblognuke.github.io/categories/Life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[读书摘抄《我编程，我快乐：程序员职业规划之道》]]></title>
    <link href="http://sunblognuke.github.io/2015/12/08/Notes-about-The-Passionate-Programmer/"/>
    <id>http://sunblognuke.github.io/2015/12/08/Notes-about-The-Passionate-Programmer/</id>
    <published>2015-12-08T08:56:23.000Z</published>
    <updated>2015-12-10T07:34:26.332Z</updated>
    <content type="html"><![CDATA[<p><img src="http://img4.douban.com/lpic/s6378707.jpg" alt=""></p>
<p><strong>《The Passionate Programmer:Creating A Remarkable Career In Software Development》</strong></p>
<p>比较赞同另外一个版本的书名翻译《激情码农：迈向卓越之路》。总体而言，这纯粹就是一本方法论的指导教程，无非就是针对某一特殊行业-程序猿来阐述而已。</p>
<p>如果某些方式或思路吻合自己想做或正在实施过程中的，那就是最好不过了 - “英雄所见略同”。其余的则汲取适合自己即可。</p>
<p>简单摘抄如下：</p>
<h2 id="选择市场">选择市场</h2><ul>
<li><p>如果你把自己的职业当成是一门生意(事实上它就是一门生意)，那么你的”产品”就是由你提供的服务构成的。</p>
</li>
<li><p>人们往往纠缠于做某事的方法，而忘记了最初的目的。</p>
</li>
<li><p>软件是一门生意，而作为开发人员，我们就是生意人，要学会融入生意并创造利润。选择市场等同于选择投资某项技术或领域。投资时，务必要权衡风险和收益。</p>
</li>
<li><p>不要用自己的技术来定位自己，而是用已经做过的和将要做的事情来定位自己。技术只是一种做事的方法。</p>
</li>
<li><p>很多人认为专攻某种技术就简单地意味着不知道其他技术。</p>
</li>
</ul>
<h2 id="在产品上投资">在产品上投资</h2><ul>
<li><p>讲课是最好的学习方法。要主动问，不要等着别人来告诉你。</p>
</li>
<li><p>研究大师的作品是成为大师的一个重要步骤。你学习别人的习惯时，就会发展出自己独特的风格。</p>
</li>
<li><p>要有雄心，但不必路人皆知。比起只专注在目标上的做法，专注于现在的工作会使你离最终目标更近。</p>
</li>
</ul>
<h2 id="执行">执行</h2><h3 id="26_一桶水中的鹅卵石">26 一桶水中的鹅卵石</h3><ul>
<li>对公司来说，基本上每个人就像一桶水中的鹅卵石。</li>
<li><p>你越是成功，就越有可能犯下重大错误。当你得到很多肯定的时候，你就会很少质疑自己的决定。你使用的方法屡试不爽时，你可能就会忽略可能会有更好的方法。你开始变得傲慢。</p>
<p>  人一旦傲慢，就会产生盲点。越认为自己无可取代，就越有可能被别人取代（你在公司存在的意义就越小）。</p>
</li>
</ul>
<h3 id="29_学习如何失败">29 学习如何失败</h3><ul>
<li><p>公司对错误处理方式的不同，会产生不同的结果。问题处理得好，会使客户对其产品更加忠诚，甚至比碰到问题之前，更加信任这家公司。要是处理得不好，那就摧毁了客户的信任。工作中犯错误的时候，要时刻谨记客户的这一心理。</p>
<p>  以下规则适用于解决技术、沟通或者项目管理中出现的错误：</p>
<ol>
<li>发现问题后第一时间提出，不要企图隐瞒错误</li>
<li>接受批评 </li>
<li>提供可执行的解决方法及可计划的时间表</li>
<li>寻求帮助</li>
</ol>
</li>
</ul>
<h3 id="30_敢于说不">30 敢于说不</h3><ul>
<li><p>有勇气说“不”的人作出的承诺更可信，也更有分量。</p>
</li>
<li><p>经常说“是”的人， 要不是天才，要不就是在说谎。后者通常占多数。</p>
</li>
</ul>
<h3 id="32_说出来、行动、展示">32 说出来、行动、展示</h3><ul>
<li><p>从不做出承诺最容易导致一事无成。没有截止期限，你也就没有压力或者说是动力来完成某项工作，特别是当任务不是十分有趣的时候。</p>
</li>
<li><p>编程是创作的工作，要想有成功的原创，失败和抄袭是最佳途径。</p>
</li>
</ul>
<h2 id="推销。。。。。。不仅仅是迎合">推销。。。。。。不仅仅是迎合</h2><h3 id="35_学会沟通，善于写作">35 学会沟通，善于写作</h3><ul>
<li><p>沟通，不仅仅是以文字方式进行沟通，是你所有绝妙的想法必须要通过的瓶颈。你自己就是你要解释的内容。</p>
</li>
<li><p>如果你无法用母语清楚地表达自己的想法，让别人明白，又怎么可能用编程语言来清楚地表达出来呢？组织观点，带领读者思考并最终做出合乎逻辑的推断，这种能力与创作出清晰的设计和系统实施，并让功能维护者理解的能力是一样的。</p>
</li>
</ul>
<h3 id="39_让人们听到你的声音">39 让人们听到你的声音</h3><ul>
<li><p>让人们听到你的声音的方法中，最重要的一点就是要尽早行动，而不是一味地去想自己是否已经做好了准备。</p>
</li>
<li><p>大部分人都低估自己的能力。你一定有某种可以传授给他人的东西。</p>
</li>
<li><p>你永远也不会觉得自己已经做好了100%的准备，所以不妨现在就开始行动吧。</p>
</li>
</ul>
<h3 id="40_创建自己的商标和品牌">40 创建自己的商标和品牌</h3><ul>
<li>得到认知和尊重是值得去创建和维护的资产。</li>
</ul>
<h3 id="41_发布你编写的程序">41 发布你编写的程序</h3><ul>
<li>对开源软件有所建树是一种技术的展示。</li>
</ul>
<h2 id="保持技术领先">保持技术领先</h2><h3 id="50_南印度捉猴陷阱">50 南印度捉猴陷阱</h3><ul>
<li>当你坚信某事的价值时，就会无法客观地批判它，即是价值僵固。</li>
</ul>
<h3 id="52_每天都有进步">52 每天都有进步</h3><ul>
<li>远大的目标会使人散失动力。持续的小目标才是可执行的。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://img4.douban.com/lpic/s6378707.jpg" alt=""></p>
<p><strong>《The Passionate Programmer:Creating A Remarkable Career In Sof]]>
    </summary>
    
      <category term="Career" scheme="http://sunblognuke.github.io/tags/Career/"/>
    
      <category term="创业" scheme="http://sunblognuke.github.io/tags/%E5%88%9B%E4%B8%9A/"/>
    
      <category term="Notes" scheme="http://sunblognuke.github.io/categories/Notes/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[精益创业]]></title>
    <link href="http://sunblognuke.github.io/2015/12/08/Lean-Startup/"/>
    <id>http://sunblognuke.github.io/2015/12/08/Lean-Startup/</id>
    <published>2015-12-08T01:06:02.000Z</published>
    <updated>2015-12-08T02:02:01.253Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/success_vs_failure.jpg" alt="Lean Startup"></p>
<h2 id="创业公式">创业公式</h2><ol>
<li>搭建可运行的原型 - 轻，小，快</li>
<li>上线运营（别管bug）</li>
<li>收集反馈</li>
<li>调整产品</li>
<li>成长壮大</li>
</ol>
<h2 id="Minimium_Viable_Product_(MVP)">Minimium Viable Product (MVP)</h2><ul>
<li>产品规格：”一個”足夠解決問題的功能範圍</li>
<li>不作平台，只解决问题</li>
<li>Complain Driven Development</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/success_vs_failure.jpg" alt="Lean Startup"></p>
<h2 id="创业公式">创业公式</h2><ol>
<li>搭建可运行]]>
    </summary>
    
      <category term="创业" scheme="http://sunblognuke.github.io/tags/%E5%88%9B%E4%B8%9A/"/>
    
      <category term="商业模式" scheme="http://sunblognuke.github.io/tags/%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="Startup" scheme="http://sunblognuke.github.io/categories/Startup/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo折腾记 Ⅲ]]></title>
    <link href="http://sunblognuke.github.io/2015/12/04/Hexo-Customization-%E2%85%A2/"/>
    <id>http://sunblognuke.github.io/2015/12/04/Hexo-Customization-Ⅲ/</id>
    <published>2015-12-04T01:17:35.000Z</published>
    <updated>2015-12-07T03:59:25.532Z</updated>
    <content type="html"><![CDATA[<p>用Hexo搭建本博客至今为止，感觉不错，管理起来很方便，Markdown排版文字的确很赞。接下来这一篇文章想更为深入的探讨，比如如何编程的方式来修改Hexo成更为灵活的布局或创建新的功能：</p>
<h2 id="边栏Widget_-_最新随笔">边栏Widget - 最新随笔</h2><p>可直接自己在模板template写或通过帮助创建Hexo helper plugin来实现。在此分享后者的做法：</p>
<p><strong>代码原理</strong></p>
<p>获取指定目录或全站的随笔并排序遍历输出而已</p>
<pre><code><span class="xml"></span>&lt;%<span class="perl"> site.categories.findOne({name: <span class="string">'project'</span>}).posts.<span class="keyword">sort</span>(<span class="string">'date'</span>, -<span class="number">1</span>).<span class="keyword">each</span>(function(post){ </span>%&gt;<span class="xml">
    <span class="tag">&lt;<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"</span></span></span>&lt;%<span class="perl">- url_for(post.path) </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span>&gt;</span></span>&lt;%=<span class="perl"> post.title || <span class="string">'(no title)'</span> </span>%&gt;<span class="xml"><span class="tag">&lt;/<span class="title">a</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">li</span>&gt;</span>
</span>&lt;%<span class="perl"> }) </span>%&gt;<span class="xml"></span>
</code></pre><ul>
<li><p>执行代码安装插件recent_posts</p>
<pre><code>npm <span class="operator"><span class="keyword">install</span> hexo-helper-recent_posts <span class="comment">--save</span></span>
</code></pre></li>
<li><p>在主题目录下的_widget目录下新建widget文件recent_posts.ejs (比如ROOT\themes\jacman\layout_widget)，代码如下（如有必要可自定义修改ulClass和liClass并添加相关的样式）：</p>
<pre><code><span class="xml"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"linkslist"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"asidetitle"</span>&gt;</span></span>&lt;%=<span class="ruby"> _<span class="number">_</span>(<span class="string">'recent_posts'</span>) </span>%&gt;<span class="xml"><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"linkslist clearfix"</span>&gt;</span>
        </span>&lt;%-<span class="ruby"> recent_posts({     <span class="symbol">count:</span> <span class="number">6</span>, 
                            <span class="symbol">ulClass:</span> <span class="string">''</span>,
                            <span class="symbol">liClass:</span> <span class="string">''</span>}) </span>%&gt;<span class="xml">
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>    </span>
</code></pre></li>
</ul>
<ul>
<li><p>打开主题_config.yml, 启用recent_posts这一widget：</p>
<pre><code>#### Widgets
widgets: 
-<span class="ruby"> github-card
</span>-<span class="ruby"> category
</span>-<span class="ruby"> tag
</span>-<span class="ruby"> recent_posts /<span class="regexp">/ 启用recent_posts
</span></span>-<span class="ruby"><span class="regexp"> links
</span></span>##- douban
-<span class="ruby"><span class="regexp"> rss
</span></span>##- weibo
</code></pre></li>
</ul>
<p>相关链接：</p>
<p><a href="https://github.com/floriancargoet/hexo-helper-recent_posts" target="_blank" rel="external">hexo-helper-recent_posts</a></p>
<p><a href="https://github.com/hexojs/hexo/issues/459" target="_blank" rel="external">https://github.com/hexojs/hexo/issues/459</a></p>
<p><a href="http://tobuildsomething.com/2015/08/01/Finding-all-posts-with-a-given-category-in-Hexo/" target="_blank" rel="external">Querying posts in Hexo</a></p>
<p><a href="https://github.com/JamesPan/hexo-theme-icarus/blob/master/layout/_widget/recent_posts.ejs" target="_blank" rel="external">https://github.com/JamesPan/hexo-theme-icarus/blob/master/layout/_widget/recent_posts.ejs</a></p>
<h2 id="创建Filter_-_文章尾部增加版权信息">创建Filter - 文章尾部增加版权信息</h2><p>Hexo博客系统天生具有良好的可扩展性，Hexo的插件基本上分为Deployer、Filter、Generator、Renderer、Tag等很多种类。其中Filter插件可用于修改一些特定的数据。比如这种<a href="https://hexo.io/api/filter.html#before_post_render" target="_blank" rel="external">before_post_render Filter</a>会在文章正式渲染之前执行，具体的执行和渲染步骤可以参见关于<a href="https://hexo.io/api/posts.html#Render" target="_blank" rel="external">渲染的官方文档</a>。</p>
<p>相关链接:</p>
<p><a href="http://kuangqi.me/tricks/append-a-copyright-info-after-every-post/index.html" target="_blank" rel="external">为Hexo博客的每一篇文章自动追加版权信息</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>用Hexo搭建本博客至今为止，感觉不错，管理起来很方便，Markdown排版文字的确很赞。接下来这一篇文章想更为深入的探讨，比如如何编程的方式来修改Hexo成更为灵活的布局或创建新的功能：</p>
<h2 id="边栏Widget_-_最新随笔">边栏Widget - 最新]]>
    </summary>
    
      <category term="Blogging" scheme="http://sunblognuke.github.io/tags/Blogging/"/>
    
      <category term="Hexo" scheme="http://sunblognuke.github.io/tags/Hexo/"/>
    
      <category term="Blog" scheme="http://sunblognuke.github.io/categories/Blog/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Blog & CMS & DotNetNuke]]></title>
    <link href="http://sunblognuke.github.io/2015/12/03/Blog-CMS-DotNetNuke/"/>
    <id>http://sunblognuke.github.io/2015/12/03/Blog-CMS-DotNetNuke/</id>
    <published>2015-12-03T06:08:43.000Z</published>
    <updated>2015-12-09T09:37:48.795Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/website.jpg?imageView2/0/w/600/q/80" alt=""></p>
<p>最近重新拾起CMS这一领域的研究，希望借助DNN重新规划自己的职业生涯或工作方式。</p>
<ul>
<li><p><a href="http://blog.xdite.net/posts/2014/02/26/growing-cms-scaling-2" target="_blank" rel="external">CMS的扩展之术</a></p>
</li>
<li><p><a href="http://blog.xdite.net/posts/2013/09/27/mvp-logdown-learn" target="_blank" rel="external">一趟 MVP 的旅程：在 Logdown 學到的幾件事</a></p>
<p>  一个台湾华人创建的博客网站，专注优雅的书写平台（Markdown）, 可对比国内的<a href="www.jianshu.com">简书</a> 或国外的 <a href="https://medium.com/" target="_blank" rel="external">Medium</a>。</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/website.jpg?imageView2/0/w/600/q/80" alt=""></p>
<p>最近重新拾起CMS这一领域的研究，希望借助DNN重新规划自己的职业]]>
    </summary>
    
      <category term="Blogging" scheme="http://sunblognuke.github.io/tags/Blogging/"/>
    
      <category term="CMS" scheme="http://sunblognuke.github.io/tags/CMS/"/>
    
      <category term="DNN8" scheme="http://sunblognuke.github.io/tags/DNN8/"/>
    
      <category term="DotNetNuke" scheme="http://sunblognuke.github.io/tags/DotNetNuke/"/>
    
      <category term="Markdown" scheme="http://sunblognuke.github.io/tags/Markdown/"/>
    
      <category term="Blog" scheme="http://sunblognuke.github.io/categories/Blog/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[小孩教育]]></title>
    <link href="http://sunblognuke.github.io/2015/12/02/Children-Issues/"/>
    <id>http://sunblognuke.github.io/2015/12/02/Children-Issues/</id>
    <published>2015-12-02T10:49:41.000Z</published>
    <updated>2015-12-09T09:28:31.425Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/children.jpg" alt=""></p>
<ul>
<li><p>孩子其实不需要玩具，他们需要的是工具。给他工具，给他书，教他技能，他自己会玩出各种东西。</p>
</li>
<li><p>常带着孩子到野外走走，带他看看水里游泳的蚂蟥，看看野生的蛇。如果院子太小，给他租一亩地，给他买各种植物的种子，在一亩地里种上几十种作物。老农会教他怎样耕作，不会收他学费。</p>
<p>  也许孩子长大后会说一口小镇口音的普通话，会说一口英国人听不懂的英文，但是这没什么，他是和土地和底层一起长大的，生命力会很顽强，也比一般的孩子健康。</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xof1d.com1.z0.glb.clouddn.com/img/children.jpg" alt=""></p>
<ul>
<li><p>孩子其实不需要玩具，他们需要的是工具。给他工具，给他书，教他技能，他自己会玩出各种东西。</p]]>
    </summary>
    
      <category term="Baby" scheme="http://sunblognuke.github.io/tags/Baby/"/>
    
      <category term="Education" scheme="http://sunblognuke.github.io/tags/Education/"/>
    
      <category term="Life" scheme="http://sunblognuke.github.io/categories/Life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[免费的代价 PK 收费的便利]]></title>
    <link href="http://sunblognuke.github.io/2015/12/02/Free-PK-Paid/"/>
    <id>http://sunblognuke.github.io/2015/12/02/Free-PK-Paid/</id>
    <published>2015-12-02T06:41:06.000Z</published>
    <updated>2015-12-03T06:22:04.486Z</updated>
    <content type="html"><![CDATA[<p>最近看了这两篇文章，感觉的确需要重新审视一些原本固有的观念和想法，在此分享大家：</p>
<p><a href="http://yaoleifly.com/2015/09/17/%E4%B9%B0%E8%B4%B5%E7%9A%84%EF%BC%8C%E4%BB%BB%E6%80%A7%E5%9C%B0%E7%9C%81%E9%92%B1/" target="_blank" rel="external">买贵的，任性地省钱</a></p>
<p>一种不一样的生活态度和境界，至少最后一条Tip对我们程序猿来说是明智的选择，工欲善其事必先利其器。</p>
<p><a href="http://dbarobin.com/2015/11/29/the-elegant-consuming-philosophy/" target="_blank" rel="external">免费才是最贵的</a></p>
<p>程序猿全新的消费观，实实在在的心声和想法，感触颇多，特别是对软件和墙的思考，希望更多的人都能尊重每个行业，其中包括程序猿产出的作品软件，或付费或捐献的方式来支持让你生活更美好的软件。</p>
<p>PS: 今年这季《奇葩说》陆陆续续看了好些集，且不论辩题有多奇葩或辩论过程多虐心，倒是蔡康永每次总结陈词时娓娓道来，核心无非总是强调 - 时间是一件神器，没有时间，一切无从谈起，时间成本是无价，任何观念和价值都可以让位或被时间同化。由此推论，当你为了获取免费的同时，所付出就是时间的代价成本。不妨留更多的时间投资到别处：</p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MjM5NjM4OTAyMA==&amp;mid=400451588&amp;idx=4&amp;sn=abd8a9184edaa3d086a5dcc2559d7d0c&amp;scene=1&amp;srcid=1125DbRd824X2pW6hSx8xuzv#rd" target="_blank" rel="external">投资要投时间对我们有利的</a></p>
<p><a href="http://www.jianshu.com/p/12d2e98ac2e0" target="_blank" rel="external">时间自由，是比财务自由更重要的事儿</a></p>
<p><a href="http://macshuo.com/?p=1042" target="_blank" rel="external">先有 Mac 还是先有钱？</a></p>
<p>最后还是想说：凡事不可扣上绝对的帽子，故此有时有意地淘淘货消磨时间也算是一种慢生活的节奏 :)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近看了这两篇文章，感觉的确需要重新审视一些原本固有的观念和想法，在此分享大家：</p>
<p><a href="http://yaoleifly.com/2015/09/17/%E4%B9%B0%E8%B4%B5%E7%9A%84%EF%BC%8C%E4%BB%BB%E6]]>
    </summary>
    
      <category term="思考" scheme="http://sunblognuke.github.io/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="趋势" scheme="http://sunblognuke.github.io/tags/%E8%B6%8B%E5%8A%BF/"/>
    
      <category term="Resources" scheme="http://sunblognuke.github.io/categories/Resources/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开发资源汇总]]></title>
    <link href="http://sunblognuke.github.io/2015/12/01/Awesome-Resources/"/>
    <id>http://sunblognuke.github.io/2015/12/01/Awesome-Resources/</id>
    <published>2015-12-01T03:47:42.000Z</published>
    <updated>2015-12-03T06:09:26.088Z</updated>
    <content type="html"><![CDATA[<h2 id="资讯">资讯</h2><ul>
<li><a href="http://teahour.fm/" target="_blank" rel="external">程序员播客</a></li>
</ul>
<p>专注程序员感兴趣的话题，包括 Web 设计和开发，移动应用设计和开发，创业以及一切 Geek 的话题。值得好好过一下。</p>
<ul>
<li><a href="http://www.infoq.com/cn/" target="_blank" rel="external">InfoQ</a></li>
</ul>
<p>InfoQ（Information Queue）是一个在线新闻/社区网站，上面的资料比较权威，中文版的更新速度比较慢</p>
<ul>
<li><a href="http://weekly.manong.io/" target="_blank" rel="external">码农周刊</a></li>
</ul>
<p>码农周刊是一份专为程序员打造的IT技术周刊，每周会有小惊喜</p>
<h2 id="回答网站">回答网站</h2><ul>
<li><p><a href="http://stackoverflow.com/" target="_blank" rel="external">Stack Overflow</a></p>
<p> 程序员的问答网站，必备</p>
</li>
<li><p><a href="http://segmentfault.com/" target="_blank" rel="external">SegmentFault</a></p>
</li>
</ul>
<p>国内的问答网站，目前还是挺活跃的</p>
<ul>
<li><a href="https://www.zhihu.com/" target="_blank" rel="external">知乎</a></li>
</ul>
<p>一个神奇的网站，各种奇葩想法</p>
<h2 id="远程工作">远程工作</h2><ul>
<li><a href="http://wangyaodi.com/" target="_blank" rel="external">Andy 的个人博客</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="资讯">资讯</h2><ul>
<li><a href="http://teahour.fm/" target="_blank" rel="external">程序员播客</a></li>
</ul>
<p>专注程序员感兴趣的话题，包括 Web 设计和开发，移动应]]>
    </summary>
    
      <category term="开发" scheme="http://sunblognuke.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="资源" scheme="http://sunblognuke.github.io/tags/%E8%B5%84%E6%BA%90/"/>
    
      <category term="Resources" scheme="http://sunblognuke.github.io/categories/Resources/"/>
    
  </entry>
  
</feed>
